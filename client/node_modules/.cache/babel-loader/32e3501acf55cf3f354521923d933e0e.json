{"ast":null,"code":"var _jsxFileName = \"/Users/zymka/Desktop/web projects/react playground/my-app/src/App.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Header from './components/Header';\nimport Gallery from './components/Gallery';\nimport Countdown from './components/Countdown';\nimport Canvas from './components/Canvas';\nimport Start from './components/Start';\n\nfunction App() {\n  const [clock, setClock] = useState(10);\n  const [limit, setLimit] = useState(10);\n  const [startRestart, setStartRestart] = useState(\"start\");\n  const [finished, setFinished] = useState(false);\n  const [imgArr, setImgArr] = useState([]);\n  const [post, setPost] = useState(true);\n  const [pointerPos, setPointerPos] = useState([{\n    x: 0,\n    y: 0,\n    color: ''\n  }]);\n  const app = useRef();\n  const appStyle = app.current; // start stop timer\n\n  useEffect(() => {\n    if (clock === 0) {\n      setFinished(true);\n    } else {\n      setFinished(false);\n    }\n\n    let timer = setTimeout(() => {\n      if (clock > limit) {\n        setClock(clock - 1);\n      }\n    }, 1000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [clock, limit]); // define pointer position on mouseMove\n\n  function handleMouseMove(e) {\n    const x = e.clientX;\n    const y = e.pageY;\n    const color = app.current.style.getPropertyValue('background-color');\n    setPointerPos({\n      x,\n      y,\n      color\n    });\n    console.log(Window.getComputedStyle());\n  } // change time and start/restart button onClick\n\n\n  function reset() {\n    if (clock === limit && clock !== 0) {\n      setStartRestart(\"reset\");\n      setLimit(0);\n      setClock(clock - 1);\n    } else {\n      setStartRestart(\"start\");\n      setClock(10);\n      setLimit(10);\n    }\n  } // update post state when clicked to initiate useEffect in canvas to push img\n\n\n  function postClick() {\n    setPost(post => !post);\n  } // get imgArr from canvas\n\n\n  function getArr(prop) {\n    setImgArr(prop);\n  } // put every img from imgArr to <div><img></div>\n\n\n  const allImg = imgArr.map(item => React.createElement(\"div\", {\n    key: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: item.src,\n    alt: \"artpiece\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, item.title))); // define style for Pointer\n\n  let pointerStyle = {\n    top: pointerPos.y - 10 + \"px\",\n    left: pointerPos.x - 10 + \"px\",\n    color: pointerPos.color\n  };\n  return React.createElement(\"div\", {\n    ref: app,\n    onMouseMove: handleMouseMove,\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"pointer\",\n    style: pointerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(Countdown, {\n    time: clock,\n    clickPost: postClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(Canvas, {\n    ifStart: startRestart,\n    ifFinished: finished,\n    getArr: getArr,\n    onPostClick: post,\n    bgColor: pointerPos.color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(Start, {\n    ifStart: startRestart,\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(Gallery, {\n    allImg: allImg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/zymka/Desktop/web projects/react playground/my-app/src/App.js"],"names":["React","useState","useEffect","useRef","Header","Gallery","Countdown","Canvas","Start","App","clock","setClock","limit","setLimit","startRestart","setStartRestart","finished","setFinished","imgArr","setImgArr","post","setPost","pointerPos","setPointerPos","x","y","color","app","appStyle","current","timer","setTimeout","clearTimeout","handleMouseMove","e","clientX","pageY","style","getPropertyValue","console","log","Window","getComputedStyle","reset","postClick","getArr","prop","allImg","map","item","id","src","title","pointerStyle","top","left"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,SAASC,GAAT,GAAe;AAEb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,OAAD,CAAhD;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACiB,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACmB,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACqB,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,CAAC,CAAC;AAACuB,IAAAA,CAAC,EAAE,CAAJ;AAAOC,IAAAA,CAAC,EAAE,CAAV;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAAD,CAAD,CAA5C;AAEA,QAAMC,GAAG,GAAGxB,MAAM,EAAlB;AACA,QAAMyB,QAAQ,GAAGD,GAAG,CAACE,OAArB,CAXa,CAab;;AACA3B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGQ,KAAK,KAAK,CAAb,EAAe;AACbO,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAFD,MAEO;AACLA,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;;AACD,QAAIa,KAAK,GAAGC,UAAU,CAAC,MAAM;AAAE,UAAGrB,KAAK,GAACE,KAAT,EAAe;AAACD,QAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AAAkB;AAAE,KAA7C,EAA+C,IAA/C,CAAtB;AACA,WAAO,MAAM;AACTsB,MAAAA,YAAY,CAACF,KAAD,CAAZ;AACH,KAFD;AAGC,GAVM,EAWT,CAACpB,KAAD,EAAQE,KAAR,CAXS,CAAT,CAda,CA2Bb;;AACA,WAASqB,eAAT,CAAyBC,CAAzB,EAA2B;AACzB,UAAMV,CAAC,GAAGU,CAAC,CAACC,OAAZ;AACA,UAAMV,CAAC,GAAGS,CAAC,CAACE,KAAZ;AACA,UAAMV,KAAK,GAAGC,GAAG,CAACE,OAAJ,CAAYQ,KAAZ,CAAkBC,gBAAlB,CAAmC,kBAAnC,CAAd;AACAf,IAAAA,aAAa,CAAC;AACZC,MAAAA,CADY;AACTC,MAAAA,CADS;AACNC,MAAAA;AADM,KAAD,CAAb;AAGAa,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,gBAAP,EAAZ;AACD,GApCY,CAsCb;;;AACA,WAASC,KAAT,GAAgB;AACd,QAAGjC,KAAK,KAAKE,KAAV,IAAmBF,KAAK,KAAK,CAAhC,EAAkC;AAC9BK,MAAAA,eAAe,CAAC,OAAD,CAAf;AACAF,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACAF,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AAEH,KALD,MAKO;AACHK,MAAAA,eAAe,CAAC,OAAD,CAAf;AACAJ,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;AACH,GAlDW,CAmDZ;;;AACD,WAAS+B,SAAT,GAAoB;AAClBvB,IAAAA,OAAO,CAAED,IAAD,IAAU,CAACA,IAAZ,CAAP;AACD,GAtDY,CAwDb;;;AACA,WAASyB,MAAT,CAAgBC,IAAhB,EAAqB;AACnB3B,IAAAA,SAAS,CAAC2B,IAAD,CAAT;AACD,GA3DY,CA4Db;;;AACA,QAAMC,MAAM,GAAG7B,MAAM,CAAC8B,GAAP,CAAWC,IAAI,IAAI;AAAK,IAAA,GAAG,EAAGA,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAK,IAAA,GAAG,EAAED,IAAI,CAACE,GAAf;AAAoB,IAAA,GAAG,EAAC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,EAAyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,IAAI,CAACG,KAAT,CAAzD,CAAnB,CAAf,CA7Da,CA+Db;;AACA,MAAIC,YAAY,GAAG;AACjBC,IAAAA,GAAG,EAAEhC,UAAU,CAACG,CAAX,GAAe,EAAf,GAAoB,IADR;AAEjB8B,IAAAA,IAAI,EAAEjC,UAAU,CAACE,CAAX,GAAe,EAAf,GAAoB,IAFT;AAGjBE,IAAAA,KAAK,EAAEJ,UAAU,CAACI;AAHD,GAAnB;AAMA,SACE;AAAK,IAAA,GAAG,EAAIC,GAAZ;AAAiB,IAAA,WAAW,EAAGM,eAA/B;AAAgD,IAAA,SAAS,EAAG,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAE,SAAhB;AAA0B,IAAA,KAAK,EAAGoB,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,SAAD;AACG,IAAA,IAAI,EAAI3C,KADX;AAEG,IAAA,SAAS,EAAIkC,SAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAOE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAI9B,YADb;AAEE,IAAA,UAAU,EAAIE,QAFhB;AAGE,IAAA,MAAM,EAAI6B,MAHZ;AAIE,IAAA,WAAW,EAAGzB,IAJhB;AAKE,IAAA,OAAO,EAAIE,UAAU,CAACI,KALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAcE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAIZ,YADb;AAEE,IAAA,OAAO,EAAG6B,KAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EAkBE,oBAAC,OAAD;AACE,IAAA,MAAM,EAAII,MADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CADF;AAwBD;;AAED,eAAetC,GAAf","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\nimport Header from './components/Header'\nimport Gallery from './components/Gallery'\nimport Countdown from './components/Countdown'\nimport Canvas from './components/Canvas'\nimport Start from './components/Start'\n\nfunction App() {\n\n  const [clock, setClock] = useState(10)\n  const [limit, setLimit] = useState(10)\n  const [startRestart, setStartRestart] = useState(\"start\")\n  const [finished, setFinished] = useState(false)\n  const [imgArr, setImgArr] = useState([])\n  const [post, setPost] = useState(true)\n  const [pointerPos, setPointerPos] = useState([{x: 0, y: 0, color: ''}])\n\n  const app = useRef()\n  const appStyle = app.current\n\n  // start stop timer\n  useEffect(() => {   \n    if(clock === 0){\n      setFinished(true)\n    } else {\n      setFinished(false)\n    }\n    let timer = setTimeout(() => { if(clock>limit){setClock(clock-1)} }, 1000);  \n    return () => {\n        clearTimeout(timer)\n    }\n    }, \n  [clock, limit])\n  \n  // define pointer position on mouseMove\n  function handleMouseMove(e){\n    const x = e.clientX \n    const y = e.pageY\n    const color = app.current.style.getPropertyValue('background-color')\n    setPointerPos({\n      x, y, color\n    })\n    console.log(Window.getComputedStyle())\n  }\n\n  // change time and start/restart button onClick\n  function reset(){\n    if(clock === limit && clock !== 0){\n        setStartRestart(\"reset\")\n        setLimit(0)  \n        setClock(clock - 1)    \n        \n    } else {\n        setStartRestart(\"start\")\n        setClock(10)\n        setLimit(10)    \n      }\n   }\n   // update post state when clicked to initiate useEffect in canvas to push img\n  function postClick(){\n    setPost((post) => !post)\n  }\n\n  // get imgArr from canvas\n  function getArr(prop){\n    setImgArr(prop)\n  }\n  // put every img from imgArr to <div><img></div>\n  const allImg = imgArr.map(item => <div key ={item.id}><img src={item.src} alt=\"artpiece\" /><p>{item.title}</p></div>);\n\n  // define style for Pointer\n  let pointerStyle = {\n    top: pointerPos.y - 10 + \"px\", \n    left: pointerPos.x - 10 + \"px\", \n    color: pointerPos.color\n  }\n\n  return (\n    <div ref = {app} onMouseMove ={handleMouseMove} className = \"app\" >\n      <div className =\"pointer\" style ={pointerStyle}></div>\n      <Header />\n      <Countdown\n         time = {clock} \n         clickPost = {postClick}\n      />\n      <Canvas \n        ifStart = {startRestart} \n        ifFinished = {finished} \n        getArr = {getArr} \n        onPostClick ={post} \n        bgColor = {pointerPos.color}\n      />\n      <Start  \n        ifStart = {startRestart} \n        onClick ={reset} \n      />\n      <Gallery \n        allImg = {allImg}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}