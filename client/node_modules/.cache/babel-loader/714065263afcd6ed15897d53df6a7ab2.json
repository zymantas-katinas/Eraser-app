{"ast":null,"code":"var _jsxFileName = \"/Users/zymka/Desktop/web projects/react playground/my-app/src/components/Draw.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Countdown from './Countdown';\nimport Canvas from './Canvas';\nimport Start from './Start';\n\nfunction Draw() {\n  const [clock, setClock] = useState(initialTime);\n  const [limit, setLimit] = useState(initialTime);\n  const [startRestart, setStartRestart] = useState(\"start\");\n  const [finished, setFinished] = useState(false);\n  const [pointerPos, setPointerPos] = useState([{\n    x: 0,\n    y: 0\n  }]);\n  const initialTime = 5; // start stop timer\n\n  useEffect(() => {\n    if (clock === 0) {\n      setFinished(true);\n    } else {\n      setFinished(false);\n    }\n\n    let timer = setTimeout(() => {\n      if (clock > limit) {\n        setClock(clock - 1);\n      }\n    }, 1000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [clock, limit]); // change time and start/restart button onClick\n\n  function reset() {\n    if (clock === limit && clock !== 0) {\n      setStartRestart(\"reset\");\n      setLimit(0);\n      setClock(clock - 1);\n    } else {\n      setStartRestart(\"start\");\n      setClock(initialTime);\n      setLimit(initialTime);\n    }\n  } // define style for Pointer\n\n\n  let pointerStyle = {\n    top: pointerPos.y - 10 + \"px\",\n    left: pointerPos.x - 10 + \"px\",\n    color: pointerPos.color\n  }; // define pointer position on mouseMove\n\n  function handleMouseMove(e) {\n    const x = e.clientX;\n    const y = e.pageY;\n    setPointerPos({\n      x,\n      y\n    });\n  }\n\n  return React.createElement(\"div\", {\n    onMouseMove: handleMouseMove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"pointer\",\n    style: pointerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Countdown, {\n    time: clock,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(Canvas, {\n    ifStart: startRestart,\n    ifFinished: finished,\n    bgColor: pointerPos.color,\n    drawingTime: limit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(Start, {\n    ifStart: startRestart,\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }));\n}\n\nexport default Draw;","map":{"version":3,"sources":["/Users/zymka/Desktop/web projects/react playground/my-app/src/components/Draw.js"],"names":["React","useState","useEffect","useRef","Countdown","Canvas","Start","Draw","clock","setClock","initialTime","limit","setLimit","startRestart","setStartRestart","finished","setFinished","pointerPos","setPointerPos","x","y","timer","setTimeout","clearTimeout","reset","pointerStyle","top","left","color","handleMouseMove","e","clientX","pageY"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAGA,SAASC,IAAT,GAAgB;AACd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACS,WAAD,CAAlC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACS,WAAD,CAAlC;AACA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,OAAD,CAAhD;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACgB,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,CAAC;AAACkB,IAAAA,CAAC,EAAE,CAAJ;AAAOC,IAAAA,CAAC,EAAE;AAAV,GAAD,CAAD,CAA5C;AAEA,QAAMV,WAAW,GAAG,CAApB,CAPc,CASd;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGM,KAAK,KAAK,CAAb,EAAe;AACbQ,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAFD,MAEO;AACLA,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;;AACD,QAAIK,KAAK,GAAGC,UAAU,CAAC,MAAM;AAAE,UAAGd,KAAK,GAACG,KAAT,EAAe;AAACF,QAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AAAkB;AAAE,KAA7C,EAA+C,IAA/C,CAAtB;AACA,WAAO,MAAM;AACTe,MAAAA,YAAY,CAACF,KAAD,CAAZ;AACH,KAFD;AAGC,GAVM,EAWT,CAACb,KAAD,EAAQG,KAAR,CAXS,CAAT,CAVc,CAwBd;;AACA,WAASa,KAAT,GAAgB;AACd,QAAGhB,KAAK,KAAKG,KAAV,IAAmBH,KAAK,KAAK,CAAhC,EAAkC;AAC9BM,MAAAA,eAAe,CAAC,OAAD,CAAf;AACAF,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACAH,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH,KAJD,MAIO;AACHM,MAAAA,eAAe,CAAC,OAAD,CAAf;AACAL,MAAAA,QAAQ,CAACC,WAAD,CAAR;AACAE,MAAAA,QAAQ,CAACF,WAAD,CAAR;AACD;AACH,GAnCY,CAqCd;;;AACA,MAAIe,YAAY,GAAG;AACjBC,IAAAA,GAAG,EAAET,UAAU,CAACG,CAAX,GAAe,EAAf,GAAoB,IADR;AAEjBO,IAAAA,IAAI,EAAEV,UAAU,CAACE,CAAX,GAAe,EAAf,GAAoB,IAFT;AAGjBS,IAAAA,KAAK,EAAEX,UAAU,CAACW;AAHD,GAAnB,CAtCc,CA2CZ;;AACA,WAASC,eAAT,CAAyBC,CAAzB,EAA2B;AACzB,UAAMX,CAAC,GAAGW,CAAC,CAACC,OAAZ;AACA,UAAMX,CAAC,GAAGU,CAAC,CAACE,KAAZ;AACAd,IAAAA,aAAa,CAAC;AACZC,MAAAA,CADY;AACTC,MAAAA;AADS,KAAD,CAAb;AAGD;;AAGH,SACI;AAAM,IAAA,WAAW,EAAGS,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAE,SAAhB;AAA0B,IAAA,KAAK,EAAGJ,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAIjB,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAIK,YADb;AAEE,IAAA,UAAU,EAAIE,QAFhB;AAGE,IAAA,OAAO,EAAIE,UAAU,CAACW,KAHxB;AAIE,IAAA,WAAW,EAAIjB,KAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EASE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAIE,YADb;AAEE,IAAA,OAAO,EAAGW,KAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADJ;AAgBD;;AAED,eAAejB,IAAf","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\nimport Countdown from './Countdown';\nimport Canvas from './Canvas';\nimport Start from './Start';\n\n \nfunction Draw() {\n  const [clock, setClock] = useState(initialTime)\n  const [limit, setLimit] = useState(initialTime)\n  const [startRestart, setStartRestart] = useState(\"start\")\n  const [finished, setFinished] = useState(false)\n  const [pointerPos, setPointerPos] = useState([{x: 0, y: 0}])\n\n  const initialTime = 5;\n\n  // start stop timer\n  useEffect(() => {   \n    if(clock === 0){\n      setFinished(true)\n    } else {\n      setFinished(false)\n    }\n    let timer = setTimeout(() => { if(clock>limit){setClock(clock-1)} }, 1000);  \n    return () => {\n        clearTimeout(timer)\n    }\n    }, \n  [clock, limit])\n\n\n  // change time and start/restart button onClick\n  function reset(){\n    if(clock === limit && clock !== 0){\n        setStartRestart(\"reset\")\n        setLimit(0)  \n        setClock(clock - 1)       \n    } else {\n        setStartRestart(\"start\")\n        setClock(initialTime)\n        setLimit(initialTime)    \n      }\n   }\n\n  // define style for Pointer\n  let pointerStyle = {\n    top: pointerPos.y - 10 + \"px\", \n    left: pointerPos.x - 10 + \"px\", \n    color: pointerPos.color\n  }\n    // define pointer position on mouseMove\n    function handleMouseMove(e){\n      const x = e.clientX \n      const y = e.pageY\n      setPointerPos({\n        x, y\n      })\n    }\n  \n\n  return (\n      <div  onMouseMove ={handleMouseMove} >\n        <div className =\"pointer\" style ={pointerStyle}></div>\n        <Countdown time = {clock} />\n        <Canvas \n          ifStart = {startRestart} \n          ifFinished = {finished} \n          bgColor = {pointerPos.color}\n          drawingTime = {limit}\n        />\n        <Start  \n          ifStart = {startRestart} \n          onClick ={reset} \n        />\n      </div>\n  );\n}\n\nexport default Draw;\n"]},"metadata":{},"sourceType":"module"}