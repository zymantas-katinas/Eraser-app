{"ast":null,"code":"var _jsxFileName = \"/Users/zymka/Desktop/web projects/react playground/my-app/src/Canvas.js\";\nimport React from 'react';\nexport default class Canvas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleResize = this.handleResize.bind(this);\n    this.startDrawing = this.startDrawing.bind(this);\n    this.stopDrawing = this.stopDrawing.bind(this);\n    this.state = {\n      drawing: false,\n      width: window.innerWidth\n    };\n  }\n\n  componentDidMount() {\n    this.ctx = this.canvasRef.current.getContext('2d');\n    window.addEventListener('resize', this.handleResize);\n  } //   componentWillUnmount() {\n  //     window.removeEventListener('resize', this.handleResize)\n  //   }\n\n\n  handleMouseMove(e) {\n    // actual coordinates\n    const coords = [e.clientX - this.canvasRef.current.offsetLeft, e.clientY - this.canvasRef.current.offsetTop];\n\n    if (this.state.drawing) {\n      this.ctx.lineTo(...coords);\n      this.ctx.stroke();\n    }\n\n    if (this.props.handleMouseMove) {\n      this.props.handleMouseMove(...coords);\n    }\n  }\n\n  handleResize() {\n    this.setState({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n  }\n\n  startDrawing(e) {\n    this.ctx.lineJoin = 'round';\n    this.ctx.lineCap = 'round';\n    this.ctx.lineWidth = 10;\n    this.ctx.strokeStyle = this.props.color;\n    this.ctx.beginPath(); // actual coordinates\n\n    this.ctx.moveTo(e.clientX - this.canvasRef.current.offsetLeft, e.clientY - this.canvasRef.current.offsetTop);\n    this.setState({\n      drawing: true\n    });\n  }\n\n  stopDrawing() {\n    this.ctx.closePath();\n    this.setState({\n      drawing: false\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/zymka/Desktop/web projects/react playground/my-app/src/Canvas.js"],"names":["React","Canvas","Component","constructor","props","canvasRef","createRef","handleMouseMove","bind","handleResize","startDrawing","stopDrawing","state","drawing","width","window","innerWidth","componentDidMount","ctx","current","getContext","addEventListener","e","coords","clientX","offsetLeft","clientY","offsetTop","lineTo","stroke","setState","height","innerHeight","lineJoin","lineCap","lineWidth","strokeStyle","color","beginPath","moveTo","closePath","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAAqC;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,SAAL,GAAiBL,KAAK,CAACM,SAAN,EAAjB;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKG,WAAL,GAAmB,KAAKA,WAAL,CAAiBH,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKI,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KADE;AAEXC,MAAAA,KAAK,EAAEC,MAAM,CAACC;AAFH,KAAb;AAID;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,GAAL,GAAW,KAAKb,SAAL,CAAec,OAAf,CAAuBC,UAAvB,CAAkC,IAAlC,CAAX;AACAL,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkC,KAAKZ,YAAvC;AACD,GAhBiD,CAiBpD;AACA;AACA;;;AACEF,EAAAA,eAAe,CAACe,CAAD,EAAI;AACjB;AACA,UAAMC,MAAM,GAAG,CACbD,CAAC,CAACE,OAAF,GAAY,KAAKnB,SAAL,CAAec,OAAf,CAAuBM,UADtB,EAEbH,CAAC,CAACI,OAAF,GAAY,KAAKrB,SAAL,CAAec,OAAf,CAAuBQ,SAFtB,CAAf;;AAIA,QAAI,KAAKf,KAAL,CAAWC,OAAf,EAAwB;AACtB,WAAKK,GAAL,CAASU,MAAT,CAAgB,GAAGL,MAAnB;AACA,WAAKL,GAAL,CAASW,MAAT;AACD;;AACD,QAAI,KAAKzB,KAAL,CAAWG,eAAf,EAAgC;AAC5B,WAAKH,KAAL,CAAWG,eAAX,CAA2B,GAAGgB,MAA9B;AACH;AACF;;AACDd,EAAAA,YAAY,GAAG;AACb,SAAKqB,QAAL,CAAc;AAAEhB,MAAAA,KAAK,EAAEC,MAAM,CAACC,UAAhB;AAA4Be,MAAAA,MAAM,EAAEhB,MAAM,CAACiB;AAA3C,KAAd;AACD;;AACDtB,EAAAA,YAAY,CAACY,CAAD,EAAI;AACd,SAAKJ,GAAL,CAASe,QAAT,GAAoB,OAApB;AACA,SAAKf,GAAL,CAASgB,OAAT,GAAmB,OAAnB;AACA,SAAKhB,GAAL,CAASiB,SAAT,GAAqB,EAArB;AACA,SAAKjB,GAAL,CAASkB,WAAT,GAAuB,KAAKhC,KAAL,CAAWiC,KAAlC;AACA,SAAKnB,GAAL,CAASoB,SAAT,GALc,CAMd;;AACA,SAAKpB,GAAL,CAASqB,MAAT,CACEjB,CAAC,CAACE,OAAF,GAAY,KAAKnB,SAAL,CAAec,OAAf,CAAuBM,UADrC,EAEEH,CAAC,CAACI,OAAF,GAAY,KAAKrB,SAAL,CAAec,OAAf,CAAuBQ,SAFrC;AAIA,SAAKG,QAAL,CAAc;AAAEjB,MAAAA,OAAO,EAAE;AAAX,KAAd;AACD;;AACDF,EAAAA,WAAW,GAAG;AACZ,SAAKO,GAAL,CAASsB,SAAT;AACA,SAAKV,QAAL,CAAc;AAAEjB,MAAAA,OAAO,EAAE;AAAX,KAAd;AACD;;AACD4B,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAaD;;AApEiD","sourcesContent":["import React from 'react'\n\nexport default class Canvas extends React.Component {\n  constructor(props) {\n    super(props)\n    this.canvasRef = React.createRef()\n    this.handleMouseMove = this.handleMouseMove.bind(this)\n    this.handleResize = this.handleResize.bind(this)\n    this.startDrawing = this.startDrawing.bind(this)\n    this.stopDrawing = this.stopDrawing.bind(this)\n    this.state = {\n      drawing: false,\n      width: window.innerWidth\n    }\n  }\n  componentDidMount() {\n    this.ctx = this.canvasRef.current.getContext('2d')\n    window.addEventListener('resize', this.handleResize);\n  }\n//   componentWillUnmount() {\n//     window.removeEventListener('resize', this.handleResize)\n//   }\n  handleMouseMove(e) {\n    // actual coordinates\n    const coords = [\n      e.clientX - this.canvasRef.current.offsetLeft,\n      e.clientY - this.canvasRef.current.offsetTop\n    ]\n    if (this.state.drawing) { \n      this.ctx.lineTo(...coords)\n      this.ctx.stroke()\n    }\n    if (this.props.handleMouseMove) {\n        this.props.handleMouseMove(...coords)\n    }\n  }\n  handleResize() {\n    this.setState({ width: window.innerWidth, height: window.innerHeight })\n  }\n  startDrawing(e) {\n    this.ctx.lineJoin = 'round'\n    this.ctx.lineCap = 'round'\n    this.ctx.lineWidth = 10\n    this.ctx.strokeStyle = this.props.color\n    this.ctx.beginPath();\n    // actual coordinates\n    this.ctx.moveTo(\n      e.clientX - this.canvasRef.current.offsetLeft,\n      e.clientY - this.canvasRef.current.offsetTop\n    )\n    this.setState({ drawing: true })\n  }\n  stopDrawing() {\n    this.ctx.closePath()\n    this.setState({ drawing: false })\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <canvas\n        //   ref={this.canvasRef}\n        //   width={this.props.width || this.state.width}\n        //   height={this.props.height || this.state.height}\n        //   onMouseDown={this.startDrawing}\n        //   onMouseUp={this.stopDrawing}\n        //   onMouseOut={this.stopDrawing}\n        //   onMouseMove={this.handleMouseMove}\n        />\n      </React.Fragment>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}