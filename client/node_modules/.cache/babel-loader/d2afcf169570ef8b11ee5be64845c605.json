{"ast":null,"code":"var _jsxFileName = \"/Users/zymka/Desktop/web projects/react playground/my-app/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Gallery from './components/Gallery';\nimport Countdown from './components/Countdown';\nimport Canvas from './components/Canvas';\nimport Start from './components/Start';\n\nfunction App() {\n  const [clock, setClock] = useState(10);\n  const [limit, setLimit] = useState(10);\n  const [startRestart, setStartRestart] = useState(\"start\");\n  const [finished, setFinished] = useState(false);\n  const [imgArr, setImgArr] = useState([]); // start stop timer\n\n  useEffect(() => {\n    if (clock === 0) {\n      setFinished(true);\n    } else {\n      setFinished(false);\n    }\n\n    let timer = setTimeout(() => {\n      if (clock > limit) {\n        setClock(clock - 1);\n      }\n    }, 1000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [clock]);\n\n  function reset() {\n    if (clock == limit && clock != 0) {\n      setStartRestart(\"reset\");\n      setLimit(0);\n      setClock(clock - 1);\n    } else {\n      setStartRestart(\"start\");\n      setClock(10);\n      setLimit(10); // clearRect(0, 0, 400, 400);\n    }\n  }\n\n  function post() {\n    console.log('post');\n  } // get imgArr from canvas\n\n\n  function getArr(prop) {\n    setImgArr(prop);\n  } // put every img from allImg to divs\n\n\n  const allImg = imgArr.map(item => React.createElement(\"div\", {\n    key: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: item.src,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, item.title)));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Gallery, {\n    allImg: allImg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(Countdown, {\n    time: clock,\n    clickPost: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Canvas, {\n    ifStart: startRestart,\n    ifFinished: finished,\n    getArr: getArr,\n    onPostClick: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(Start, {\n    ifStart: startRestart,\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/zymka/Desktop/web projects/react playground/my-app/src/App.js"],"names":["React","useState","useEffect","Header","Gallery","Countdown","Canvas","Start","App","clock","setClock","limit","setLimit","startRestart","setStartRestart","finished","setFinished","imgArr","setImgArr","timer","setTimeout","clearTimeout","reset","post","console","log","getArr","prop","allImg","map","item","id","src","title"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Header from './components/Header'\nimport Gallery from './components/Gallery'\nimport Countdown from './components/Countdown'\nimport Canvas from './components/Canvas'\nimport Start from './components/Start'\n\nfunction App() {\n\n  const [clock, setClock] = useState(10)\n  const [limit, setLimit] = useState(10)\n  const [startRestart, setStartRestart] = useState(\"start\")\n  const [finished, setFinished] = useState(false)\n  const [imgArr, setImgArr] = useState([])\n \n  // start stop timer\n  useEffect(() => {   \n    if(clock === 0){\n      setFinished(true)\n    } else {\n      setFinished(false)\n    }\n    let timer = setTimeout(() => { if(clock>limit){setClock(clock-1)} }, 1000);  \n    return () => {\n        clearTimeout(timer)\n    }\n    }, \n  [clock])\n\n  function reset(){\n      if(clock == limit && clock != 0){\n           setStartRestart(\"reset\")\n           setLimit(0)  \n           setClock(clock - 1)    \n           \n      } else {\n          setStartRestart(\"start\")\n          setClock(10)\n          setLimit(10)    \n          // clearRect(0, 0, 400, 400);\n\n       }\n   }\n\n  function post(){\n    console.log('post')\n  }\n\n  // get imgArr from canvas\n  function getArr(prop){\n    setImgArr(prop)\n  }\n  // put every img from allImg to divs\n  const allImg = imgArr.map(item =>  <div key ={item.id}><img src={item.src} /><p>{item.title}</p></div> );\n\n  return (\n    <div >\n      <Header />\n      <Gallery allImg = {allImg}/>\n      <Countdown time = {clock} clickPost = {post}/>\n      <Canvas ifStart = {startRestart} ifFinished = {finished} getArr = {getArr} onPostClick ={post} />\n      <Start ifStart = {startRestart} onClick ={reset}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}