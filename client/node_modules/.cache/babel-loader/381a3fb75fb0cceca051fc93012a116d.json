{"ast":null,"code":"var _jsxFileName = \"/Users/zymka/Desktop/web projects/react playground/my-app/src/components/Countdown.js\";\nimport React, { useState, useEffect } from 'react';\n\nfunction Countdown() {\n  const [clock, setClock] = useState(startTime);\n  const [limit, setLimit] = useState(startTime);\n  const [stopResume, setStopResume] = useState(\"stop\");\n  const [startRestart, setStartRestart] = useState(\"start\");\n  let startTime = 10;\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      if (clock > limit) {\n        setClock(clock - 1);\n      }\n    }, 1000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [clock]);\n\n  function restart() {\n    if (startRestart === \"start\") {\n      setLimit(0);\n      setClock(clock - 1);\n    } else {\n      setLimit(clock);\n    }\n  }\n\n  useEffect(() => {\n    if (clock === limit) {\n      setStartRestart(\"start\");\n    } else {\n      setStartRestart(\"restart\");\n    }\n  }, [clock]);\n\n  function stop() {\n    if (stopResume === \"stop\") {\n      setStopResume(\"resume\");\n      setLimit(clock); // setClock(clock)         \n    } else {\n      setStopResume(\"stop\");\n      setLimit(0);\n      setClock(clock - 1);\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"countdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: restart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \" \", startRestart), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, clock, \"s\"), React.createElement(\"button\", {\n    onClick: stop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \" \", stopResume));\n}\n\nexport default Countdown;","map":{"version":3,"sources":["/Users/zymka/Desktop/web projects/react playground/my-app/src/components/Countdown.js"],"names":["React","useState","useEffect","Countdown","clock","setClock","startTime","limit","setLimit","stopResume","setStopResume","startRestart","setStartRestart","timer","setTimeout","clearTimeout","restart","stop"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;AAEA,SAASC,SAAT,GAAoB;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAACK,SAAD,CAAlC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACK,SAAD,CAAlC;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,MAAD,CAA5C;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,OAAD,CAAhD;AAEA,MAAIK,SAAS,GAAG,EAAhB;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,KAAK,GAAGC,UAAU,CAAC,MAAM;AAAE,UAAGV,KAAK,GAACG,KAAT,EAAe;AAACF,QAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AAAkB;AAAE,KAA7C,EAA+C,IAA/C,CAAtB;AACA,WAAO,MAAM;AACTW,MAAAA,YAAY,CAACF,KAAD,CAAZ;AACH,KAFD;AAGC,GALI,EAMT,CAACT,KAAD,CANS,CAAT;;AAQA,WAASY,OAAT,GAAkB;AACf,QAAGL,YAAY,KAAK,OAApB,EAA4B;AACvBH,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACAH,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACJ,KAHD,MAGO;AACFI,MAAAA,QAAQ,CAACJ,KAAD,CAAR;AAEH;AACJ;;AAEDF,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGE,KAAK,KAAKG,KAAb,EAAmB;AACfK,MAAAA,eAAe,CAAC,OAAD,CAAf;AACH,KAFD,MAEO;AACHA,MAAAA,eAAe,CAAC,SAAD,CAAf;AACH;AACJ,GANQ,EAMP,CAACR,KAAD,CANO,CAAT;;AAQA,WAASa,IAAT,GAAe;AACX,QAAGR,UAAU,KAAK,MAAlB,EAAyB;AACrBC,MAAAA,aAAa,CAAC,QAAD,CAAb;AACAF,MAAAA,QAAQ,CAACJ,KAAD,CAAR,CAFqB,CAGrB;AACH,KAJD,MAKK;AACDM,MAAAA,aAAa,CAAC,MAAD,CAAb;AACAF,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACAH,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACF;AACL;;AAED,SACI;AAAK,IAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAIY,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA8BL,YAA9B,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,KAAL,MAFJ,EAGJ;AAAQ,IAAA,OAAO,EAAIa,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA2BR,UAA3B,CAHI,CADJ;AAQH;;AACD,eAAeN,SAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\n\nfunction Countdown(){\n    const [clock, setClock] = useState(startTime)\n    const [limit, setLimit] = useState(startTime)\n    const [stopResume, setStopResume] = useState(\"stop\")\n    const [startRestart, setStartRestart] = useState(\"start\")\n\n    let startTime = 10\n\n    useEffect(() => {   \n        let timer = setTimeout(() => { if(clock>limit){setClock(clock-1)} }, 1000);  \n        return () => {\n            clearTimeout(timer)\n        }\n        }, \n    [clock])\n\n    function restart(){\n       if(startRestart === \"start\"){\n            setLimit(0)  \n            setClock(clock - 1)    \n       } else {\n            setLimit(clock)\n           \n        }\n    }\n\n    useEffect(() => {\n        if(clock === limit){\n            setStartRestart(\"start\")\n        } else {\n            setStartRestart(\"restart\")\n        }\n    },[clock])\n\n    function stop(){\n        if(stopResume === \"stop\"){\n            setStopResume(\"resume\"); \n            setLimit(clock)\n            // setClock(clock)         \n        }\n         else{\n            setStopResume(\"stop\")\n            setLimit(0)\n            setClock(clock - 1)\n         }  \n    }\n\n    return (\n        <div className = \"countdown\">\n            <button onClick = {restart}> {startRestart}</button>\n            <h1>{clock}s</h1>\n    <button onClick = {stop}> {stopResume}</button>\n        </div>\n        \n    )\n}\nexport default Countdown"]},"metadata":{},"sourceType":"module"}