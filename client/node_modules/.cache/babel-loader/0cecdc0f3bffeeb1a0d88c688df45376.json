{"ast":null,"code":"var _jsxFileName = \"/Users/zymka/Desktop/web projects/react playground/my-app/src/components/Canvas.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nexport default function Canvas(props) {\n  const [drawing, setDrawing] = useState(false);\n  const [restart, setRestart] = useState(true);\n  const canvasRef = useRef();\n  const ctx = useRef();\n  const converted = useRef();\n  useEffect(() => {\n    ctx = canvasRef.current.getContext('2d'); // draw canvas\n\n    ctx.fillStyle = \"#17252A\";\n    ctx.fillRect(0, 0, 415, 415);\n  }, []); // Reset if reset/start is clicked in parent.\n\n  useEffect(() => {\n    handleClear();\n\n    if (props.ifStart === \"reset\") {\n      setDrawing(true);\n    } else {\n      setDrawing(false);\n    }\n  }, [props.ifStart]); // Stop when time is 0\n\n  useEffect(() => {\n    if (props.ifFinished) {\n      setDrawing(false);\n    }\n  }, [props.ifFinished]); // draw when moving mouse if draw = true\n\n  function handleMouseMove(e) {\n    const coords = [e.clientX - canvasRef.current.offsetLeft, e.pageY - canvasRef.current.offsetTop];\n    ctx.lineTo(...coords);\n    ctx.stroke();\n  }\n\n  function startDrawing(e) {\n    ctx.lineJoin = 'round';\n    ctx.lineCap = 'round';\n    ctx.lineWidth = 20; // ctx.strokeStyle = \"#3AAFA9\"\n\n    ctx.strokeStyle = \"white\";\n    ctx.beginPath(); // actual coordinates\n\n    ctx.moveTo(e.clientX - canvasRef.current.offsetLeft, e.pageY - canvasRef.current.offsetTop);\n  } //clear\n\n\n  function handleClear() {\n    ctx.clearRect(0, 0, 415, 415);\n  } //stop\n\n\n  function stopDrawing() {\n    ctx.closePath();\n  } // download\n  // function download(){\n  //   const dataURI = canvasRef.current.toDataURL();\n  //   console.log(dataURI)\n  //   converted.src = dataURI\n  // }\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"canvas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"canvas\", {\n    ref: canvasRef,\n    width: 415,\n    height: 415,\n    onMouseOver: startDrawing,\n    onMouseOut: stopDrawing,\n    onMouseMove: handleMouseMove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/zymka/Desktop/web projects/react playground/my-app/src/components/Canvas.js"],"names":["React","useState","useEffect","useRef","Canvas","props","drawing","setDrawing","restart","setRestart","canvasRef","ctx","converted","current","getContext","fillStyle","fillRect","handleClear","ifStart","ifFinished","handleMouseMove","e","coords","clientX","offsetLeft","pageY","offsetTop","lineTo","stroke","startDrawing","lineJoin","lineCap","lineWidth","strokeStyle","beginPath","moveTo","clearRect","stopDrawing","closePath"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\n\nexport default function Canvas(props) {\n  const [drawing, setDrawing] = useState(false)\n  const [restart, setRestart] = useState(true)\n  \n  const canvasRef = useRef()\n  const ctx = useRef()\n  const converted = useRef()\n  \n  useEffect(() => {\n    ctx = canvasRef.current.getContext('2d')\n    // draw canvas\n    ctx.fillStyle = \"#17252A\"\n    ctx.fillRect(0, 0, 415, 415)\n\n  }, [])\n\n  // Reset if reset/start is clicked in parent.\n  useEffect(() => {\n    handleClear()\n    if(props.ifStart === \"reset\"){\n      setDrawing(true)\n    } else {\n      setDrawing(false)\n    }\n  }, [props.ifStart])\n\n  // Stop when time is 0\n  useEffect(() => {\n    if(props.ifFinished){\n      setDrawing(false)\n    } \n  }, [props.ifFinished])\n\n\n  // draw when moving mouse if draw = true\n  function handleMouseMove(e) {\n    const coords = [\n      e.clientX - canvasRef.current.offsetLeft,\n      e.pageY - canvasRef.current.offsetTop\n    ]\n      ctx.lineTo(...coords)\n      ctx.stroke()\n  }\n\n  function startDrawing(e) {\n    ctx.lineJoin = 'round'\n    ctx.lineCap = 'round'\n    ctx.lineWidth = 20\n    // ctx.strokeStyle = \"#3AAFA9\"\n    ctx.strokeStyle = \"white\"\n    ctx.beginPath();\n    // actual coordinates\n    ctx.moveTo(\n      e.clientX - canvasRef.current.offsetLeft,\n      e.pageY - canvasRef.current.offsetTop\n    )\n  }\n\n\n   //clear\n  function handleClear() {\n    ctx.clearRect(0, 0, 415, 415)\n  }\n\n  //stop\n  function stopDrawing() {\n    ctx.closePath()\n  }\n\n  // download\n  // function download(){\n  //   const dataURI = canvasRef.current.toDataURL();\n  //   console.log(dataURI)\n  //   converted.src = dataURI\n  // }\n\n  return (\n    <div>\n      {/* <button onClick ={download}> download </button> */}\n      {/* <div className =\"canvas\"> <img ref={converted} src=\"\" /></div> */}\n      <div className =\"canvas\">\n        <canvas\n        ref={canvasRef}\n        width={415}\n        height={415}\n        onMouseOver={startDrawing}\n        onMouseOut={stopDrawing}\n        onMouseMove={handleMouseMove}\n        />\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}