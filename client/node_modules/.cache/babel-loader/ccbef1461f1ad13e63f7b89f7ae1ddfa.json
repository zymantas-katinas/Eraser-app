{"ast":null,"code":"var _jsxFileName = \"/Users/zymka/Desktop/web projects/react playground/my-app/src/components/Countdown.js\";\nimport React, { useState, useEffect } from 'react';\n\nfunction Countdown() {\n  const [clock, setClock] = useState(10);\n  const [limit, setLimit] = useState(10); // const [startTime, setStartTime] = useState(10)\n\n  const [stopResume, setStopResume] = useState(true);\n  const [startRestart, setStartRestart] = useState(\"start\"); // let startTime = 10\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      if (clock > limit) {\n        setClock(clock - 1);\n      }\n    }, 1000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [clock]); // useEffect(() => {\n  //     if(clock === limit){\n  //         setStartRestart(\"start\")\n  //     } else {\n  //         setStartRestart(\"restart\")\n  //     }\n  // },[clock])\n\n  function restart() {\n    if (clock == limit) {\n      setStartRestart(\"reset\");\n      setLimit(0);\n      setClock(clock - 1);\n    } else {\n      setStartRestart(\"start\");\n      setClock(10);\n      setLimit(10);\n    }\n  }\n\n  function stop() {\n    if (stopResume === \"stop\") {\n      setStopResume(\"resume\");\n      setLimit(clock); // setClock(clock)         \n    } else {\n      setStopResume(\"stop\");\n      setLimit(0);\n      setClock(clock - 1);\n    }\n  }\n\n  let style = {\n    display: clock === limit ? \"none\" : \"inline-block\"\n  };\n  return React.createElement(\"div\", {\n    className: \"countdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: restart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \" \", startRestart), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, clock, \"s\"), React.createElement(\"button\", {\n    onClick: stop,\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \" \", stopResume));\n}\n\nexport default Countdown;","map":{"version":3,"sources":["/Users/zymka/Desktop/web projects/react playground/my-app/src/components/Countdown.js"],"names":["React","useState","useEffect","Countdown","clock","setClock","limit","setLimit","stopResume","setStopResume","startRestart","setStartRestart","timer","setTimeout","clearTimeout","restart","stop","style","display"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;AAEA,SAASC,SAAT,GAAoB;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC,CAFgB,CAGhB;;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,OAAD,CAAhD,CALgB,CAShB;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIU,KAAK,GAAGC,UAAU,CAAC,MAAM;AAAE,UAAGT,KAAK,GAACE,KAAT,EAAe;AAACD,QAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AAAkB;AAAE,KAA7C,EAA+C,IAA/C,CAAtB;AACA,WAAO,MAAM;AACTU,MAAAA,YAAY,CAACF,KAAD,CAAZ;AACH,KAFD;AAGC,GALI,EAMT,CAACR,KAAD,CANS,CAAT,CAXgB,CAmBhB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAASW,OAAT,GAAkB;AACd,QAAGX,KAAK,IAAIE,KAAZ,EAAkB;AACbK,MAAAA,eAAe,CAAC,OAAD,CAAf;AACAJ,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACAF,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACJ,KAJD,MAIO;AACHO,MAAAA,eAAe,CAAC,OAAD,CAAf;AACAN,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACF;AACJ;;AAEF,WAASS,IAAT,GAAe;AACX,QAAGR,UAAU,KAAK,MAAlB,EAAyB;AACrBC,MAAAA,aAAa,CAAC,QAAD,CAAb;AACAF,MAAAA,QAAQ,CAACH,KAAD,CAAR,CAFqB,CAGrB;AACH,KAJD,MAKK;AACDK,MAAAA,aAAa,CAAC,MAAD,CAAb;AACAF,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACAF,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACF;AACL;;AACD,MAAIa,KAAK,GAAG;AAACC,IAAAA,OAAO,EAAEd,KAAK,KAAKE,KAAV,GAAkB,MAAlB,GAA2B;AAArC,GAAZ;AACA,SACI;AAAK,IAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAIS,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA8BL,YAA9B,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,KAAL,MAFJ,EAGJ;AAAQ,IAAA,OAAO,EAAIY,IAAnB;AAAyB,IAAA,KAAK,EAAGC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA0CT,UAA1C,CAHI,CADJ;AAQH;;AACD,eAAeL,SAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\n\nfunction Countdown(){\n    const [clock, setClock] = useState(10)\n    const [limit, setLimit] = useState(10)\n    // const [startTime, setStartTime] = useState(10)\n    const [stopResume, setStopResume] = useState(true)\n    const [startRestart, setStartRestart] = useState(\"start\")\n\n\n\n    // let startTime = 10\n\n    useEffect(() => {   \n        let timer = setTimeout(() => { if(clock>limit){setClock(clock-1)} }, 1000);  \n        return () => {\n            clearTimeout(timer)\n        }\n        }, \n    [clock])\n\n    // useEffect(() => {\n    //     if(clock === limit){\n    //         setStartRestart(\"start\")\n    //     } else {\n    //         setStartRestart(\"restart\")\n    //     }\n    // },[clock])\n\n    function restart(){\n        if(clock == limit){\n             setStartRestart(\"reset\")\n             setLimit(0)  \n             setClock(clock - 1)    \n        } else {\n            setStartRestart(\"start\")\n            setClock(10)\n            setLimit(10)           \n         }\n     }\n\n    function stop(){\n        if(stopResume === \"stop\"){\n            setStopResume(\"resume\"); \n            setLimit(clock)\n            // setClock(clock)         \n        }\n         else{\n            setStopResume(\"stop\")\n            setLimit(0)\n            setClock(clock - 1)\n         }  \n    }\n    let style = {display: clock === limit ? \"none\" : \"inline-block\"}\n    return (\n        <div className = \"countdown\">\n            <button onClick = {restart}> {startRestart}</button>\n            <h1>{clock}s</h1>\n    <button onClick = {stop} style ={style}> {stopResume}</button>\n        </div>\n        \n    )\n}\nexport default Countdown"]},"metadata":{},"sourceType":"module"}