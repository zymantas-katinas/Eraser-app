{"ast":null,"code":"var _jsxFileName = \"/Users/zymka/Desktop/web projects/react playground/my-app/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Countdown from './components/Countdown';\nimport Canvas from './components/Canvas';\nimport Start from './components/Start';\n\nfunction App() {\n  const [clock, setClock] = useState(10);\n  const [limit, setLimit] = useState(10);\n  const [startRestart, setStartRestart] = useState(\"start\");\n  const [finished, setFinished] = useState(false);\n  const [imgArr, setImgArr] = useState([]);\n  useEffect(() => {\n    if (clock === 0) {\n      setFinished(true);\n    } else {\n      setFinished(false);\n    }\n\n    let timer = setTimeout(() => {\n      if (clock > limit) {\n        setClock(clock - 1);\n      }\n    }, 1000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [clock]);\n\n  function reset() {\n    if (clock == limit && clock != 0) {\n      setStartRestart(\"reset\");\n      setLimit(0);\n      setClock(clock - 1);\n    } else {\n      setStartRestart(\"start\");\n      setClock(10);\n      setLimit(10); // clearRect(0, 0, 400, 400);\n    } //  console.log(\"clicked \")\n\n  }\n\n  function post() {\n    console.log(\"added\");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Countdown, {\n    time: clock,\n    clickPost: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(Canvas, {\n    ifStart: startRestart,\n    ifFinished: finished,\n    getArr: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(Start, {\n    ifStart: startRestart,\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/zymka/Desktop/web projects/react playground/my-app/src/App.js"],"names":["React","useState","useEffect","Header","Countdown","Canvas","Start","App","clock","setClock","limit","setLimit","startRestart","setStartRestart","finished","setFinished","imgArr","setImgArr","timer","setTimeout","clearTimeout","reset","post","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,SAASC,GAAT,GAAe;AAEb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,OAAD,CAAhD;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGM,KAAK,KAAK,CAAb,EAAe;AACbO,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAFD,MAEO;AACLA,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;;AACD,QAAIG,KAAK,GAAGC,UAAU,CAAC,MAAM;AAAE,UAAGX,KAAK,GAACE,KAAT,EAAe;AAACD,QAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AAAkB;AAAE,KAA7C,EAA+C,IAA/C,CAAtB;AACA,WAAO,MAAM;AACTY,MAAAA,YAAY,CAACF,KAAD,CAAZ;AACH,KAFD;AAGC,GAVM,EAWT,CAACV,KAAD,CAXS,CAAT;;AAaA,WAASa,KAAT,GAAgB;AACZ,QAAGb,KAAK,IAAIE,KAAT,IAAkBF,KAAK,IAAI,CAA9B,EAAgC;AAC3BK,MAAAA,eAAe,CAAC,OAAD,CAAf;AACAF,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACAF,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AAEJ,KALD,MAKO;AACHK,MAAAA,eAAe,CAAC,OAAD,CAAf;AACAJ,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,QAAQ,CAAC,EAAD,CAAR,CAHG,CAIH;AAEF,KAZU,CAaZ;;AACF;;AACF,WAASW,IAAT,GAAe;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAIhB,KAAnB;AAA0B,IAAA,SAAS,EAAIc,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAIV,YAAnB;AAAiC,IAAA,UAAU,EAAIE,QAA/C;AAAyD,IAAA,MAAM,EAAIQ,IAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAIV,YAAlB;AAAgC,IAAA,OAAO,EAAGS,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD;;AAED,eAAed,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Header from './components/Header'\nimport Countdown from './components/Countdown'\nimport Canvas from './components/Canvas'\nimport Start from './components/Start'\n\nfunction App() {\n\n  const [clock, setClock] = useState(10)\n  const [limit, setLimit] = useState(10)\n  const [startRestart, setStartRestart] = useState(\"start\")\n  const [finished, setFinished] = useState(false)\n  const [imgArr, setImgArr] = useState([])\n\n  useEffect(() => {   \n    if(clock === 0){\n      setFinished(true)\n    } else {\n      setFinished(false)\n    }\n    let timer = setTimeout(() => { if(clock>limit){setClock(clock-1)} }, 1000);  \n    return () => {\n        clearTimeout(timer)\n    }\n    }, \n  [clock])\n\n  function reset(){\n      if(clock == limit && clock != 0){\n           setStartRestart(\"reset\")\n           setLimit(0)  \n           setClock(clock - 1)    \n           \n      } else {\n          setStartRestart(\"start\")\n          setClock(10)\n          setLimit(10)    \n          // clearRect(0, 0, 400, 400);\n\n       }\n      //  console.log(\"clicked \")\n   }\n  function post(){\n    console.log(\"added\")\n  }\n\n  return (\n    <div >\n      <Header />\n      <Countdown time = {clock} clickPost = {post}/>\n      <Canvas ifStart = {startRestart} ifFinished = {finished} getArr = {post} />\n      <Start ifStart = {startRestart} onClick ={reset}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}