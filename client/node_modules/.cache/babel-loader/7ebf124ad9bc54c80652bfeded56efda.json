{"ast":null,"code":"var _jsxFileName = \"/Users/zymka/Desktop/web projects/react playground/my-app/src/components/Canvas.js\";\nimport React from 'react';\nexport default class Canvas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleResize = this.handleResize.bind(this);\n    this.startDrawing = this.startDrawing.bind(this);\n    this.stopDrawing = this.stopDrawing.bind(this);\n    this.state = {\n      drawing: false,\n      // width: window.innerWidth\n      width: 500,\n      height: 500\n    };\n  }\n\n  componentDidMount() {\n    this.ctx = this.canvasRef.current.getContext('2d');\n    window.addEventListener('resize', this.handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  handleMouseMove(e) {\n    // actual coordinates\n    const coords = [e.clientX - this.canvasRef.current.offsetLeft, e.clientY - this.canvasRef.current.offsetTop];\n\n    if (this.state.drawing) {\n      this.ctx.lineTo(...coords);\n      this.ctx.stroke();\n    }\n\n    if (this.props.handleMouseMove) {\n      this.props.handleMouseMove(...coords);\n    }\n  } // handleResize() {\n  //   this.setState({ width: window.innerWidth, height: window.innerHeight })\n  // }\n\n\n  startDrawing(e) {\n    this.ctx.lineJoin = 'round';\n    this.ctx.lineCap = 'round';\n    this.ctx.lineWidth = 10;\n    this.ctx.strokeStyle = this.props.color;\n    this.ctx.beginPath(); // actual coordinates\n\n    this.ctx.moveTo(e.clientX - this.canvasRef.current.offsetLeft, e.clientY - this.canvasRef.current.offsetTop);\n    this.setState({\n      drawing: true\n    });\n  }\n\n  stopDrawing() {\n    this.ctx.closePath();\n    this.setState({\n      drawing: false\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"canvas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      ref: this.canvasRef,\n      width: this.props.width || this.state.width,\n      height: this.props.height || this.state.height,\n      onMouseDown: this.startDrawing,\n      onMouseUp: this.stopDrawing,\n      onMouseOut: this.stopDrawing,\n      onMouseMove: this.handleMouseMove,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/zymka/Desktop/web projects/react playground/my-app/src/components/Canvas.js"],"names":["React","Canvas","Component","constructor","props","canvasRef","createRef","handleMouseMove","bind","handleResize","startDrawing","stopDrawing","state","drawing","width","height","componentDidMount","ctx","current","getContext","window","addEventListener","componentWillUnmount","removeEventListener","e","coords","clientX","offsetLeft","clientY","offsetTop","lineTo","stroke","lineJoin","lineCap","lineWidth","strokeStyle","color","beginPath","moveTo","setState","closePath","render"],"mappings":"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","sourcesContent":["import React from 'react'\n\n\nexport default class Canvas extends React.Component {\n  constructor(props) {\n    super(props)\n    this.canvasRef = React.createRef()\n    this.handleMouseMove = this.handleMouseMove.bind(this)\n    this.handleResize = this.handleResize.bind(this)\n    this.startDrawing = this.startDrawing.bind(this)\n    this.stopDrawing = this.stopDrawing.bind(this)\n    this.state = {\n      drawing: false,\n      // width: window.innerWidth\n      width: 500,\n      height: 500\n    }\n  }\n  componentDidMount() {\n    this.ctx = this.canvasRef.current.getContext('2d')\n    window.addEventListener('resize', this.handleResize);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize)\n  }\n  handleMouseMove(e) {\n    // actual coordinates\n    const coords = [\n      e.clientX - this.canvasRef.current.offsetLeft,\n      e.clientY - this.canvasRef.current.offsetTop\n    ]\n    if (this.state.drawing) { \n      this.ctx.lineTo(...coords)\n      this.ctx.stroke()\n    }\n    if (this.props.handleMouseMove) {\n        this.props.handleMouseMove(...coords)\n    }\n  }\n  // handleResize() {\n  //   this.setState({ width: window.innerWidth, height: window.innerHeight })\n  // }\n  startDrawing(e) {\n    this.ctx.lineJoin = 'round'\n    this.ctx.lineCap = 'round'\n    this.ctx.lineWidth = 10\n    this.ctx.strokeStyle = this.props.color\n    this.ctx.beginPath();\n    // actual coordinates\n    this.ctx.moveTo(\n      e.clientX - this.canvasRef.current.offsetLeft,\n      e.clientY - this.canvasRef.current.offsetTop\n    )\n    this.setState({ drawing: true })\n  }\n  stopDrawing() {\n    this.ctx.closePath()\n    this.setState({ drawing: false })\n  }\n  render() {\n    return (\n        <div className=\"canvas\">\n             <React.Fragment>\n                <canvas\n                ref={this.canvasRef}\n                width={this.props.width || this.state.width}\n                height={this.props.height || this.state.height}\n                onMouseDown={this.startDrawing}\n                onMouseUp={this.stopDrawing}\n                onMouseOut={this.stopDrawing}\n                onMouseMove={this.handleMouseMove}\n                />\n            </React.Fragment>\n        </div>\n    \n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}