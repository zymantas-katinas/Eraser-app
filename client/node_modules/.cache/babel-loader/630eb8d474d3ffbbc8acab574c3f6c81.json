{"ast":null,"code":"var _jsxFileName = \"/Users/zymka/Desktop/web projects/react playground/my-app/src/components/Canvas.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nexport default function Canvas(props) {\n  const [drawing, setDrawing] = useState(false);\n  const [restart, setRestart] = useState(true);\n  const [imgArr, setImgArr] = useState([]);\n  const [title, setTitle] = useState(\"\"); // const [imgArr, setImgArr] = useState([])\n\n  const canvasRef = useRef();\n  const ctx = useRef();\n  const converted = useRef();\n  useEffect(() => {\n    ctx.current = canvasRef.current.getContext('2d'); // ctx.current.fillStyle = \"#17252A\"\n    // ctx.current.fillRect(0, 0, 415, 415)\n    // ctx.current.strokeStyle = \"#3AAFA9\"\n    // ctx.current.lineWidth = 20\n    // ctx.current.strokeRect(0, 0, 415, 415)\n\n    console.log(imgArr);\n  }, []); // Reset if reset/start is clicked in parent.\n\n  useEffect(() => {\n    handleClear();\n\n    if (props.ifStart === \"reset\") {\n      setDrawing(true);\n    } else {\n      setDrawing(false);\n    }\n  }, [props.ifStart]); // Stop when time is 0\n\n  useEffect(() => {\n    if (props.ifFinished) {\n      setDrawing(false);\n    }\n  }, [props.ifFinished]); //clear function\n\n  function handleClear() {\n    ctx.current.clearRect(0, 0, 415, 415);\n  } // draw when moving mouse if draw = true\n\n\n  function handleMouseMove(e) {\n    const coords = [e.clientX - canvasRef.current.offsetLeft, e.pageY - canvasRef.current.offsetTop];\n\n    if (drawing) {\n      ctx.current.lineTo(...coords);\n      ctx.current.stroke();\n    }\n  }\n\n  function startDrawing(e) {\n    ctx.current.lineJoin = 'round';\n    ctx.current.lineCap = 'round';\n    ctx.current.lineWidth = 20; // ctx.current.strokeStyle = \"#3AAFA9\"\n\n    ctx.current.strokeStyle = \"white\";\n    ctx.current.beginPath(); // actual coordinates\n\n    ctx.current.moveTo(e.clientX - canvasRef.current.offsetLeft, e.pageY - canvasRef.current.offsetTop);\n  }\n\n  function stopDrawing() {\n    ctx.current.closePath(); // setDrawing(false)\n  }\n\n  function handleClick() {// setDrawing(true)\n    // console.log(props.title)\n  }\n\n  function pushToImgArr() {\n    const dataURI = canvasRef.current.toDataURL();\n    setImgArr(item => {\n      return [...item, {\n        src: dataURI,\n        title: title,\n        id: imgArr.length\n      }];\n    });\n    console.log(imgArr);\n  }\n\n  const allImg = imgArr.map(item => React.createElement(\"div\", {\n    key: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: item.src,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, item.title)));\n\n  function inputTitle(event) {\n    setTitle(event.target.value);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"canvasImg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, allImg), React.createElement(\"button\", {\n    onClick: pushToImgArr,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \" download \"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    placeholder: \"title\",\n    onChange: inputTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"canvas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"canvas\", {\n    ref: canvasRef,\n    width: 415,\n    height: 415 // onMouseDown={startDrawing}\n    ,\n    onMouseOver: startDrawing // onMouseUp={stopDrawing}\n    ,\n    onMouseOut: stopDrawing,\n    onMouseMove: handleMouseMove,\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })));\n} //master","map":{"version":3,"sources":["/Users/zymka/Desktop/web projects/react playground/my-app/src/components/Canvas.js"],"names":["React","useState","useEffect","useRef","Canvas","props","drawing","setDrawing","restart","setRestart","imgArr","setImgArr","title","setTitle","canvasRef","ctx","converted","current","getContext","console","log","handleClear","ifStart","ifFinished","clearRect","handleMouseMove","e","coords","clientX","offsetLeft","pageY","offsetTop","lineTo","stroke","startDrawing","lineJoin","lineCap","lineWidth","strokeStyle","beginPath","moveTo","stopDrawing","closePath","handleClick","pushToImgArr","dataURI","toDataURL","item","src","id","length","allImg","map","inputTitle","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\n\nexport default function Canvas(props) {\n  const [drawing, setDrawing] = useState(false)\n  const [restart, setRestart] = useState(true)\n  const [imgArr, setImgArr] = useState([])\n  const [title, setTitle] = useState(\"\")\n  \n  // const [imgArr, setImgArr] = useState([])\n  \n\n  const canvasRef = useRef()\n  const ctx = useRef()\n  const converted = useRef()\n  \n  useEffect(() => {\n    ctx.current = canvasRef.current.getContext('2d')\n    // ctx.current.fillStyle = \"#17252A\"\n    // ctx.current.fillRect(0, 0, 415, 415)\n\n    // ctx.current.strokeStyle = \"#3AAFA9\"\n    // ctx.current.lineWidth = 20\n    // ctx.current.strokeRect(0, 0, 415, 415)\n    console.log(imgArr)\n   \n  }, [])\n\n  // Reset if reset/start is clicked in parent.\n  useEffect(() => {\n    handleClear()\n    if(props.ifStart === \"reset\"){\n      setDrawing(true)\n    } else {\n      setDrawing(false)\n    }\n  }, [props.ifStart])\n\n  // Stop when time is 0\n  useEffect(() => {\n    if(props.ifFinished){\n      setDrawing(false)\n    } \n  }, [props.ifFinished])\n\n   //clear function\n  function handleClear() {\n     ctx.current.clearRect(0, 0, 415, 415)\n  }\n\n  // draw when moving mouse if draw = true\n  function handleMouseMove(e) {\n    const coords = [\n      e.clientX - canvasRef.current.offsetLeft,\n      e.pageY - canvasRef.current.offsetTop\n    ]\n    if (drawing) { \n      ctx.current.lineTo(...coords)\n      ctx.current.stroke()\n    }\n  }\n\n\n  function startDrawing(e) {\n    ctx.current.lineJoin = 'round'\n    ctx.current.lineCap = 'round'\n    ctx.current.lineWidth = 20\n    // ctx.current.strokeStyle = \"#3AAFA9\"\n    ctx.current.strokeStyle = \"white\"\n    ctx.current.beginPath();\n    // actual coordinates\n    ctx.current.moveTo(\n      e.clientX - canvasRef.current.offsetLeft,\n      e.pageY - canvasRef.current.offsetTop\n    )\n  }\n\n  function stopDrawing() {\n    ctx.current.closePath()\n    // setDrawing(false)\n  }\n  function handleClick(){\n    // setDrawing(true)\n    // console.log(props.title)\n  }\n\n  function pushToImgArr(){\n    const dataURI = canvasRef.current.toDataURL();\n    setImgArr(item =>  { return[...item, { src: dataURI, title: title, id: imgArr.length }] }  )\n    console.log(imgArr)\n  }\n\n   const allImg = imgArr.map(item =>  <div key ={item.id}><img src={item.src} /><p>{item.title}</p></div> );\n\n   function inputTitle(event){\n      setTitle(event.target.value)\n   }\n\n  return (\n    <div>\n       <div className =\"canvasImg\">\n         {allImg}       \n        </div>\n        \n          <button onClick ={pushToImgArr}> download </button>\n          <input type=\"text\" name=\"title\" placeholder =\"title\" onChange={inputTitle} />\n       \n \n      \n      <div className =\"canvas\">\n        <canvas\n        ref={canvasRef}\n        width={415}\n        height={415}\n        // onMouseDown={startDrawing}\n        onMouseOver={startDrawing}\n        // onMouseUp={stopDrawing}\n        onMouseOut={stopDrawing}\n        onMouseMove={handleMouseMove}\n        onClick={handleClick}\n        />\n      </div>\n    </div>\n  )\n}\n\n\n//master\n"]},"metadata":{},"sourceType":"module"}